#!/usr/bin/env node

"use strict";

var program = require('commander'),
    request = require('request'),
    pkg = require('../package.json'),
    fs = require('fs');

// Node api root
var url = "http://nodejs.org/api/";

// Holds what module we are going to be accessing
//var module;

// Pretty prints the doc
function prettyPrintFunc(obj) {
    // match the function, put into the array
    var re = /(.+)\((.*)\)/;
    var match = obj.textRaw.match(re);
    var functionName = match[1];    
    var args = match[2].split(',');
    
    //console.log(obj.textRaw.replace(re, "$2"));
    console.log('Function: ' + functionName);
    for(var i = 0; i < args.length; i++) {
	// Print out arguments with whitespace stripped
	console.log("Argument " + i + ": " + args[i].replace(/\s+/g, ''));
    }
//    console.log('Arguments: ' + args);
//    console.log(match);
}

// finds a function in the api-docs
function findFunction(arr, name) {
//    console.log(name);
//    console.log(arr[0].name);
    for(var i = 0; i < arr.length; i++) {
//	console.log(arr[i].name);
	if(arr[i].name == name) {	    
	    prettyPrintFunc(arr[i]);
	}
    }
/*    for(var obj in arr) {
	if(arr.hasOwnProperty(obj)) {
	    console.log(obj.name);
	}
    }*/
}

// Access the module and return function we are looking for
function getDocs(module, func) {
    request(url + module + '.json', function(err, res, data) {
	if(!err && res.statusCode == 200) {
	    var json = JSON.parse(data);
	    // access the function
	    findFunction(json.modules[0].methods, func);
	} else {
	    throw err;
	}
    });
}

// Get the package version
program.version(pkg.version);

// List the modules available from node api
program
    .command('list')
    .description('list modules')
    .action(function() {
	console.log('list');
    });

// Find docs about the first argumentn
program
    .command('*')
    .description('<Module>.[<Class>.]<function>')
    .action(function(arg) {
	
	arg = arg.toLowerCase();	
	var splitArg = arg.split('.');	
	if(splitArg.length == 2) {
	    // put the first argument as the module
	    var module = splitArg[0];
	    var func = splitArg[1];
	    // get the docs we are looking for
	    getDocs(module, func);
	}
	
    });

program.parse(process.argv);
